<div class="container my-5">
  <div class="row">
    <div class="col-md-6">
      <div class="product-gallery text-center">
        <% const images = product.images ? product.images.split(',') : [] %>
        <% if (images.length > 0) { %>
          <!-- Carrusel para varias imágenes -->
          <div id="productCarousel" class="carousel slide" data-bs-ride="carousel" style="max-width: 600px; margin: 0 auto;">
            <div class="carousel-inner">
              <% images.forEach((image, index) => { %>
                <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                  <!-- Enlace para el zoom -->
                  <a href="<%= image %>" data-lightbox="product-images" data-title="<%= product.name %>">
                    <img src="<%= image %>" class="d-block mx-auto img-fluid" style="max-height: 600px; width: auto; object-fit: contain;" alt="<%= product.name %>">
                  </a>
                </div>
              <% }) %>
            </div>
            <!-- Controles del carrusel -->
            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
              <span class="carousel-control-prev-icon" style="filter: invert(1);" aria-hidden="true"></span>
              <span class="visually-hidden">Anterior</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
              <span class="carousel-control-next-icon" style="filter: invert(1);" aria-hidden="true"></span>
              <span class="visually-hidden">Siguiente</span>
            </button>
          </div>
        <% } %>
      </div>
    </div>
    <div class="col-md-6">
      <div class="product-info">
        <h1 class="mb-3"><%= product.name %></h1>
        <p class="text-muted">Vendido por <%= product.seller_name %></p>
        <h2 class="text-primary mb-4">$<%= product.price %></h2>
        <p class="mb-4"><%= product.description %></p>
        
        <form action="/cart/add" method="POST">
          <input type="hidden" name="productId" value="<%= product.id %>">
          <div class="mb-3">
            <label class="form-label">Talla</label>
            <select id="size-select" class="form-select" name="size" required>
              <option value="">Seleccionar Talla</option>
              <% const sizes = [...new Set(variants.map(v => v.size))]; %>
              <% sizes.forEach(size => { %>
                <option value="<%= size %>"><%= size %></option>
              <% }) %>
            </select>
          </div>
          
          <div class="mb-3">
            <label class="form-label">Color</label>
            <select id="color-select" class="form-select" name="color" required>
              <option value="">Seleccionar Color</option>
              <% const colors = [...new Set(variants.map(v => v.color))]; %>
              <% colors.forEach(color => { %>
                <option value="<%= color %>"><%= color %></option>
              <% }) %>
            </select>
          </div>
          
            </select>
          </div>          
          <div class="mb-3">
            <label class="form-label">Cantidad</label>
            <input type="number" class="form-control" name="quantity" value="1" min="1" max="10" required>
          </div>
          <button type="submit" class="btn btn-primary btn-lg w-100">Añadir al Carrito</button>
        </form>        
      </div>
    </div>
  </div>
</div>

<!-- Incluir dependencias de Lightbox y Bootstrap -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const variants = <%- JSON.stringify(variants) %>; // Datos de variantes desde el backend
    const sizeSelect = document.getElementById('size-select');
    const colorSelect = document.getElementById('color-select');

    function updateOptions(selectedSize, selectedColor) {
      // Filtrar colores basados en la talla seleccionada
      const availableColors = variants
        .filter(variant => !selectedSize || variant.size === selectedSize)
        .map(variant => variant.color);

      // Filtrar tallas basadas en el color seleccionado
      const availableSizes = variants
        .filter(variant => !selectedColor || variant.color === selectedColor)
        .map(variant => variant.size);

      // Mantener el valor actual de cada selector
      const currentSize = sizeSelect.value;
      const currentColor = colorSelect.value;

      // Actualizar opciones de color
      colorSelect.innerHTML = '<option value="">Seleccionar Color</option>';
      [...new Set(availableColors)].forEach(color => {
        colorSelect.innerHTML += `<option value="${color}" ${
          color === currentColor ? 'selected' : ''
        }>${color}</option>`;
      });

      // Actualizar opciones de talla
      sizeSelect.innerHTML = '<option value="">Seleccionar Talla</option>';
      [...new Set(availableSizes)].forEach(size => {
        sizeSelect.innerHTML += `<option value="${size}" ${
          size === currentSize ? 'selected' : ''
        }>${size}</option>`;
      });
    }

    // Escuchar cambios en talla
    sizeSelect.addEventListener('change', () => {
      const selectedSize = sizeSelect.value;
      const selectedColor = colorSelect.value;
      updateOptions(selectedSize, selectedColor);
    });

    // Escuchar cambios en color
    colorSelect.addEventListener('change', () => {
      const selectedSize = sizeSelect.value;
      const selectedColor = colorSelect.value;
      updateOptions(selectedSize, selectedColor);
    });
  });
</script>
